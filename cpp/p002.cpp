/*
 * Even Fibonacci numbers
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 *      1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not
 * exceed four million, find the sum of the even-valued terms.
 */

#include <iostream>
#include <utility>

constexpr long maxNumber = 4'000'000;

int main(int, char **) {
    /*
     * We can see that every third Fibonacci number is even. This means we can
     * add the current number and calculate three new ones in each iteration.
     */
    long sum = 0;

    long last = 1;
    long cur = 2;
    while(cur <= maxNumber) {
        sum += cur;
        last = std::exchange(cur, last + cur);
        last = std::exchange(cur, last + cur);
        last = std::exchange(cur, last + cur);
    }

    std::cout << "Project Euler - Problem 2: Even Fibonacci numbers\n\n";
    std::cout << "The sum of even Fibonacci numbers not above " << maxNumber
              << " is:\n"
              << sum << '\n';
}
